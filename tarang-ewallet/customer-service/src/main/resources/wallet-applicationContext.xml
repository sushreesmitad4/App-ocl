<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="
      http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
      http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
      http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
      http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">

   	<bean name="customerDao" class="com.tarang.ewallet.customer.dao.impl.CustomerDaoImpl" lazy-init="true">
		<constructor-arg ref="hibernateTemplate"/>
   	</bean>
  	<bean name="customerRepository" class="com.tarang.ewallet.customer.repository.impl.CustomerRepositoryImpl" lazy-init="true">
    	<constructor-arg ref="customerDao"/>
    	<constructor-arg ref="commonService"/>
		<constructor-arg ref="cryptService" />
		<constructor-arg ref="masterDataService" />
		<constructor-arg ref="transactionManager" />
  	</bean>  
  	<bean name="customerService" class="com.tarang.ewallet.customer.service.impl.CustomerServiceImpl" lazy-init="true">
    	<constructor-arg ref="customerRepository"/>
  	</bean> 
 	
</beans>